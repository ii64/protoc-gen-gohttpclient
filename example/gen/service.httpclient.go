// Code generated by protoc-gen-gohttpclient v1.1.4. DO NOT EDIT.
// source: service.proto

package gen

import (
	context "context"
	lib "github.com/ii64/protoc-gen-gohttpclient/lib"
	grpc "google.golang.org/grpc"
	http "net/http"
	url "net/url"
	strconv "strconv"
)

// KitsuServiceHTTPClient is http service client.
type KitsuServiceHTTPClient struct {
	lib.HTTPClientService
}

// NewKitsuServiceHTTPClient returns KitsuServiceHTTPClient
func NewKitsuServiceHTTPClient(baseURL string, client *http.Client, addt ...lib.HTTPServiceConstructorArg) (s *KitsuServiceHTTPClient) {
	if client == nil {
		client = http.DefaultClient
	}
	defer func() {
		for _, f := range addt {
			f(&s.HTTPClientService)
		}
	}()
	s = &KitsuServiceHTTPClient{}
	s.HTTPClientService = lib.HTTPClientService{
		BaseURL:               baseURL,
		Client:                client,
		PbDiscardUnknown:      false,
		HttpResponseValidator: lib.DefaultHTTPResponseValidator,
		ResponseValidator:     lib.DefaultMethodValidator,
	}
	return
}

// GetAnimeList returns KitsuAnimeListResponse
func (c *KitsuServiceHTTPClient) GetAnimeList(ctx context.Context, in *KitsuAnimeListRequest, opts ...grpc.CallOption) (out *KitsuAnimeListResponse, err error) {
	var req *http.Request
	req, err = http.NewRequest("GET", c.BaseURL+"/api/edge/anime", nil)
	if err != nil {
		return
	}
	req.URL.RawQuery = in.QueryString().Encode()
	req = req.WithContext(ctx)
	var res *http.Response
	if res, err = c.Client.Do(req); err != nil {
		return
	}
	if err = c.HttpResponseValidator(res); err != nil {
		return
	}
	defer res.Body.Close()
	var rs KitsuAnimeListResponse
	if err = c.ResponseHTTPClientHandler(res, &rs); err != nil {
		return
	}
	if f := c.ResponseValidator; f != nil {
		if err = f(&rs); err != nil {
			return
		}
	}
	return &rs, nil
}

// GetAnime returns KitsuAnimeResponse
func (c *KitsuServiceHTTPClient) GetAnime(ctx context.Context, in *KitsuAnimeRequest, opts ...grpc.CallOption) (out *KitsuAnimeResponse, err error) {
	// main.pathTerm{term:main.termVal{fieldName:"id", injectPoint:[]string(nil), raw:"id"}}
	var f1 string
	if in != nil {
		// StringKind | <nil>
		f1 = url.QueryEscape(in.Id)
	}
	var req *http.Request
	req, err = http.NewRequest("GET", c.BaseURL+"/api/edge/anime/"+f1, nil)
	if err != nil {
		return
	}
	req.URL.RawQuery = in.QueryString().Encode()
	req = req.WithContext(ctx)
	var res *http.Response
	if res, err = c.Client.Do(req); err != nil {
		return
	}
	if err = c.HttpResponseValidator(res); err != nil {
		return
	}
	defer res.Body.Close()
	var rs KitsuAnimeResponse
	if err = c.ResponseHTTPClientHandler(res, &rs); err != nil {
		return
	}
	if f := c.ResponseValidator; f != nil {
		if err = f(&rs); err != nil {
			return
		}
	}
	return &rs, nil
}

// QueryString returns http url.Values of KitsuAnimeImageDimension
func (u *KitsuAnimeImageDimension) QueryString() url.Values {
	var q = url.Values{}
	q.Set("width", strconv.FormatInt(int64(u.Width), 10))
	q.Set("height", strconv.FormatInt(int64(u.Height), 10))
	return q
}

// QueryString returns http url.Values of KitsuAnimeImageMeta
func (u *KitsuAnimeImageMeta) QueryString() url.Values {
	var q = url.Values{}
	if u.Dimensions != nil {
		for k, v := range u.Dimensions {
			q.Set("dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
			q.Set("dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
		}
	}
	return q
}

// QueryString returns http url.Values of KitsuAnimeImage
func (u *KitsuAnimeImage) QueryString() url.Values {
	var q = url.Values{}
	q.Set("tiny", u.Tiny)
	q.Set("small", u.Small)
	q.Set("medium", u.Medium)
	q.Set("large", u.Large)
	q.Set("original", u.Original)
	if u.Meta != nil {
		if u.Meta.Dimensions != nil {
			for k, v := range u.Meta.Dimensions {
				q.Set("meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
				q.Set("meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
			}
		}
	}
	return q
}

// QueryString returns http url.Values of KitsuAnimeAttributes
func (u *KitsuAnimeAttributes) QueryString() url.Values {
	var q = url.Values{}
	q.Set("createdAt", u.CreatedAt)
	q.Set("updatedAt", u.UpdatedAt)
	q.Set("slug", u.Slug)
	q.Set("synopsis", u.Synopsis)
	q.Set("description", u.Description)
	q.Set("coverImageTopOffset", strconv.FormatInt(int64(u.CoverImageTopOffset), 10))
	if u.Titles != nil {
		for k, v := range u.Titles {
			q.Set("titles["+k+"]", v)
		}
	}
	q.Set("canonicalTitle", u.CanonicalTitle)
	q.Set("averageRating", u.AverageRating)
	if u.RatingFrequencies != nil {
		for k, v := range u.RatingFrequencies {
			q.Set("ratingFrequencies["+k+"]", v)
		}
	}
	q.Set("userCount", strconv.FormatInt(u.UserCount, 10))
	q.Set("favoritesCount", strconv.FormatInt(u.FavoritesCount, 10))
	q.Set("startDate", u.StartDate)
	q.Set("endDate", u.EndDate)
	q.Set("nextRelease", u.NextRelease)
	q.Set("popularityRank", strconv.FormatInt(int64(u.PopularityRank), 10))
	q.Set("ratingRank", strconv.FormatInt(int64(u.RatingRank), 10))
	q.Set("ageRating", u.AgeRating)
	q.Set("ageRatingGuide", u.AgeRatingGuide)
	q.Set("subtype", u.Subtype)
	q.Set("status", u.Status)
	q.Set("tba", u.Tba)
	if u.PosterImage != nil {
		q.Set("posterImage.tiny", u.PosterImage.Tiny)
		q.Set("posterImage.small", u.PosterImage.Small)
		q.Set("posterImage.medium", u.PosterImage.Medium)
		q.Set("posterImage.large", u.PosterImage.Large)
		q.Set("posterImage.original", u.PosterImage.Original)
		if u.PosterImage.Meta != nil {
			if u.PosterImage.Meta.Dimensions != nil {
				for k, v := range u.PosterImage.Meta.Dimensions {
					q.Set("posterImage.meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
					q.Set("posterImage.meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
				}
			}
		}
	}
	if u.CoverImage != nil {
		q.Set("coverImage.tiny", u.CoverImage.Tiny)
		q.Set("coverImage.small", u.CoverImage.Small)
		q.Set("coverImage.medium", u.CoverImage.Medium)
		q.Set("coverImage.large", u.CoverImage.Large)
		q.Set("coverImage.original", u.CoverImage.Original)
		if u.CoverImage.Meta != nil {
			if u.CoverImage.Meta.Dimensions != nil {
				for k, v := range u.CoverImage.Meta.Dimensions {
					q.Set("coverImage.meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
					q.Set("coverImage.meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
				}
			}
		}
	}
	q.Set("episodeCount", strconv.FormatInt(int64(u.EpisodeCount), 10))
	q.Set("episodeLength", strconv.FormatInt(int64(u.EpisodeLength), 10))
	q.Set("totalLength", strconv.FormatInt(int64(u.TotalLength), 10))
	q.Set("youtubeVideoId", u.YoutubeVideoId)
	q.Set("showType", u.ShowType)
	tm0 := "false"
	if u.Nsfw {
		tm0 = "true"
	}
	q.Set("nsfw", tm0)
	return q
}

// QueryString returns http url.Values of KitsuAnimeLinks
func (u *KitsuAnimeLinks) QueryString() url.Values {
	var q = url.Values{}
	q.Set("self", u.Self)
	q.Set("related", u.Related)
	q.Set("next", u.Next)
	q.Set("last", u.Last)
	return q
}

// QueryString returns http url.Values of KitsuAnimeRelationKitsuAnimeItemItem
func (u *KitsuAnimeRelationKitsuAnimeItemItem) QueryString() url.Values {
	var q = url.Values{}
	if u.Links != nil {
		q.Set("links.self", u.Links.Self)
		q.Set("links.related", u.Links.Related)
		q.Set("links.next", u.Links.Next)
		q.Set("links.last", u.Links.Last)
	}
	return q
}

// QueryString returns http url.Values of KitsuAnimeRelationships
func (u *KitsuAnimeRelationships) QueryString() url.Values {
	var q = url.Values{}
	if u.Genres != nil {
		if u.Genres.Links != nil {
			q.Set("genres.links.self", u.Genres.Links.Self)
			q.Set("genres.links.related", u.Genres.Links.Related)
			q.Set("genres.links.next", u.Genres.Links.Next)
			q.Set("genres.links.last", u.Genres.Links.Last)
		}
	}
	if u.Categories != nil {
		if u.Categories.Links != nil {
			q.Set("categories.links.self", u.Categories.Links.Self)
			q.Set("categories.links.related", u.Categories.Links.Related)
			q.Set("categories.links.next", u.Categories.Links.Next)
			q.Set("categories.links.last", u.Categories.Links.Last)
		}
	}
	if u.Castings != nil {
		if u.Castings.Links != nil {
			q.Set("castings.links.self", u.Castings.Links.Self)
			q.Set("castings.links.related", u.Castings.Links.Related)
			q.Set("castings.links.next", u.Castings.Links.Next)
			q.Set("castings.links.last", u.Castings.Links.Last)
		}
	}
	if u.Installments != nil {
		if u.Installments.Links != nil {
			q.Set("installments.links.self", u.Installments.Links.Self)
			q.Set("installments.links.related", u.Installments.Links.Related)
			q.Set("installments.links.next", u.Installments.Links.Next)
			q.Set("installments.links.last", u.Installments.Links.Last)
		}
	}
	if u.Mappings != nil {
		if u.Mappings.Links != nil {
			q.Set("mappings.links.self", u.Mappings.Links.Self)
			q.Set("mappings.links.related", u.Mappings.Links.Related)
			q.Set("mappings.links.next", u.Mappings.Links.Next)
			q.Set("mappings.links.last", u.Mappings.Links.Last)
		}
	}
	if u.Reviews != nil {
		if u.Reviews.Links != nil {
			q.Set("reviews.links.self", u.Reviews.Links.Self)
			q.Set("reviews.links.related", u.Reviews.Links.Related)
			q.Set("reviews.links.next", u.Reviews.Links.Next)
			q.Set("reviews.links.last", u.Reviews.Links.Last)
		}
	}
	if u.MediaRelationships != nil {
		if u.MediaRelationships.Links != nil {
			q.Set("mediaRelationships.links.self", u.MediaRelationships.Links.Self)
			q.Set("mediaRelationships.links.related", u.MediaRelationships.Links.Related)
			q.Set("mediaRelationships.links.next", u.MediaRelationships.Links.Next)
			q.Set("mediaRelationships.links.last", u.MediaRelationships.Links.Last)
		}
	}
	if u.Characters != nil {
		if u.Characters.Links != nil {
			q.Set("characters.links.self", u.Characters.Links.Self)
			q.Set("characters.links.related", u.Characters.Links.Related)
			q.Set("characters.links.next", u.Characters.Links.Next)
			q.Set("characters.links.last", u.Characters.Links.Last)
		}
	}
	if u.Staff != nil {
		if u.Staff.Links != nil {
			q.Set("staff.links.self", u.Staff.Links.Self)
			q.Set("staff.links.related", u.Staff.Links.Related)
			q.Set("staff.links.next", u.Staff.Links.Next)
			q.Set("staff.links.last", u.Staff.Links.Last)
		}
	}
	if u.Productions != nil {
		if u.Productions.Links != nil {
			q.Set("productions.links.self", u.Productions.Links.Self)
			q.Set("productions.links.related", u.Productions.Links.Related)
			q.Set("productions.links.next", u.Productions.Links.Next)
			q.Set("productions.links.last", u.Productions.Links.Last)
		}
	}
	if u.Quotes != nil {
		if u.Quotes.Links != nil {
			q.Set("quotes.links.self", u.Quotes.Links.Self)
			q.Set("quotes.links.related", u.Quotes.Links.Related)
			q.Set("quotes.links.next", u.Quotes.Links.Next)
			q.Set("quotes.links.last", u.Quotes.Links.Last)
		}
	}
	if u.Episodes != nil {
		if u.Episodes.Links != nil {
			q.Set("episodes.links.self", u.Episodes.Links.Self)
			q.Set("episodes.links.related", u.Episodes.Links.Related)
			q.Set("episodes.links.next", u.Episodes.Links.Next)
			q.Set("episodes.links.last", u.Episodes.Links.Last)
		}
	}
	if u.StreamingLinks != nil {
		if u.StreamingLinks.Links != nil {
			q.Set("streamingLinks.links.self", u.StreamingLinks.Links.Self)
			q.Set("streamingLinks.links.related", u.StreamingLinks.Links.Related)
			q.Set("streamingLinks.links.next", u.StreamingLinks.Links.Next)
			q.Set("streamingLinks.links.last", u.StreamingLinks.Links.Last)
		}
	}
	if u.AnimeProductions != nil {
		if u.AnimeProductions.Links != nil {
			q.Set("animeProductions.links.self", u.AnimeProductions.Links.Self)
			q.Set("animeProductions.links.related", u.AnimeProductions.Links.Related)
			q.Set("animeProductions.links.next", u.AnimeProductions.Links.Next)
			q.Set("animeProductions.links.last", u.AnimeProductions.Links.Last)
		}
	}
	if u.AnimeCharacters != nil {
		if u.AnimeCharacters.Links != nil {
			q.Set("animeCharacters.links.self", u.AnimeCharacters.Links.Self)
			q.Set("animeCharacters.links.related", u.AnimeCharacters.Links.Related)
			q.Set("animeCharacters.links.next", u.AnimeCharacters.Links.Next)
			q.Set("animeCharacters.links.last", u.AnimeCharacters.Links.Last)
		}
	}
	if u.AnimeStaff != nil {
		if u.AnimeStaff.Links != nil {
			q.Set("animeStaff.links.self", u.AnimeStaff.Links.Self)
			q.Set("animeStaff.links.related", u.AnimeStaff.Links.Related)
			q.Set("animeStaff.links.next", u.AnimeStaff.Links.Next)
			q.Set("animeStaff.links.last", u.AnimeStaff.Links.Last)
		}
	}
	return q
}

// QueryString returns http url.Values of KitsuAnimeItem
func (u *KitsuAnimeItem) QueryString() url.Values {
	var q = url.Values{}
	q.Set("id", u.Id)
	q.Set("type", u.Type)
	if u.Links != nil {
		q.Set("links.self", u.Links.Self)
		q.Set("links.related", u.Links.Related)
		q.Set("links.next", u.Links.Next)
		q.Set("links.last", u.Links.Last)
	}
	if u.Attributes != nil {
		q.Set("attributes.createdAt", u.Attributes.CreatedAt)
		q.Set("attributes.updatedAt", u.Attributes.UpdatedAt)
		q.Set("attributes.slug", u.Attributes.Slug)
		q.Set("attributes.synopsis", u.Attributes.Synopsis)
		q.Set("attributes.description", u.Attributes.Description)
		q.Set("attributes.coverImageTopOffset", strconv.FormatInt(int64(u.Attributes.CoverImageTopOffset), 10))
		if u.Attributes.Titles != nil {
			for k, v := range u.Attributes.Titles {
				q.Set("attributes.titles["+k+"]", v)
			}
		}
		q.Set("attributes.canonicalTitle", u.Attributes.CanonicalTitle)
		q.Set("attributes.averageRating", u.Attributes.AverageRating)
		if u.Attributes.RatingFrequencies != nil {
			for k, v := range u.Attributes.RatingFrequencies {
				q.Set("attributes.ratingFrequencies["+k+"]", v)
			}
		}
		q.Set("attributes.userCount", strconv.FormatInt(u.Attributes.UserCount, 10))
		q.Set("attributes.favoritesCount", strconv.FormatInt(u.Attributes.FavoritesCount, 10))
		q.Set("attributes.startDate", u.Attributes.StartDate)
		q.Set("attributes.endDate", u.Attributes.EndDate)
		q.Set("attributes.nextRelease", u.Attributes.NextRelease)
		q.Set("attributes.popularityRank", strconv.FormatInt(int64(u.Attributes.PopularityRank), 10))
		q.Set("attributes.ratingRank", strconv.FormatInt(int64(u.Attributes.RatingRank), 10))
		q.Set("attributes.ageRating", u.Attributes.AgeRating)
		q.Set("attributes.ageRatingGuide", u.Attributes.AgeRatingGuide)
		q.Set("attributes.subtype", u.Attributes.Subtype)
		q.Set("attributes.status", u.Attributes.Status)
		q.Set("attributes.tba", u.Attributes.Tba)
		if u.Attributes.PosterImage != nil {
			q.Set("attributes.posterImage.tiny", u.Attributes.PosterImage.Tiny)
			q.Set("attributes.posterImage.small", u.Attributes.PosterImage.Small)
			q.Set("attributes.posterImage.medium", u.Attributes.PosterImage.Medium)
			q.Set("attributes.posterImage.large", u.Attributes.PosterImage.Large)
			q.Set("attributes.posterImage.original", u.Attributes.PosterImage.Original)
			if u.Attributes.PosterImage.Meta != nil {
				if u.Attributes.PosterImage.Meta.Dimensions != nil {
					for k, v := range u.Attributes.PosterImage.Meta.Dimensions {
						q.Set("attributes.posterImage.meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
						q.Set("attributes.posterImage.meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
					}
				}
			}
		}
		if u.Attributes.CoverImage != nil {
			q.Set("attributes.coverImage.tiny", u.Attributes.CoverImage.Tiny)
			q.Set("attributes.coverImage.small", u.Attributes.CoverImage.Small)
			q.Set("attributes.coverImage.medium", u.Attributes.CoverImage.Medium)
			q.Set("attributes.coverImage.large", u.Attributes.CoverImage.Large)
			q.Set("attributes.coverImage.original", u.Attributes.CoverImage.Original)
			if u.Attributes.CoverImage.Meta != nil {
				if u.Attributes.CoverImage.Meta.Dimensions != nil {
					for k, v := range u.Attributes.CoverImage.Meta.Dimensions {
						q.Set("attributes.coverImage.meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
						q.Set("attributes.coverImage.meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
					}
				}
			}
		}
		q.Set("attributes.episodeCount", strconv.FormatInt(int64(u.Attributes.EpisodeCount), 10))
		q.Set("attributes.episodeLength", strconv.FormatInt(int64(u.Attributes.EpisodeLength), 10))
		q.Set("attributes.totalLength", strconv.FormatInt(int64(u.Attributes.TotalLength), 10))
		q.Set("attributes.youtubeVideoId", u.Attributes.YoutubeVideoId)
		q.Set("attributes.showType", u.Attributes.ShowType)
		tm0 := "false"
		if u.Attributes.Nsfw {
			tm0 = "true"
		}
		q.Set("attributes.nsfw", tm0)
	}
	if u.Relationships != nil {
		if u.Relationships.Genres != nil {
			if u.Relationships.Genres.Links != nil {
				q.Set("relationships.genres.links.self", u.Relationships.Genres.Links.Self)
				q.Set("relationships.genres.links.related", u.Relationships.Genres.Links.Related)
				q.Set("relationships.genres.links.next", u.Relationships.Genres.Links.Next)
				q.Set("relationships.genres.links.last", u.Relationships.Genres.Links.Last)
			}
		}
		if u.Relationships.Categories != nil {
			if u.Relationships.Categories.Links != nil {
				q.Set("relationships.categories.links.self", u.Relationships.Categories.Links.Self)
				q.Set("relationships.categories.links.related", u.Relationships.Categories.Links.Related)
				q.Set("relationships.categories.links.next", u.Relationships.Categories.Links.Next)
				q.Set("relationships.categories.links.last", u.Relationships.Categories.Links.Last)
			}
		}
		if u.Relationships.Castings != nil {
			if u.Relationships.Castings.Links != nil {
				q.Set("relationships.castings.links.self", u.Relationships.Castings.Links.Self)
				q.Set("relationships.castings.links.related", u.Relationships.Castings.Links.Related)
				q.Set("relationships.castings.links.next", u.Relationships.Castings.Links.Next)
				q.Set("relationships.castings.links.last", u.Relationships.Castings.Links.Last)
			}
		}
		if u.Relationships.Installments != nil {
			if u.Relationships.Installments.Links != nil {
				q.Set("relationships.installments.links.self", u.Relationships.Installments.Links.Self)
				q.Set("relationships.installments.links.related", u.Relationships.Installments.Links.Related)
				q.Set("relationships.installments.links.next", u.Relationships.Installments.Links.Next)
				q.Set("relationships.installments.links.last", u.Relationships.Installments.Links.Last)
			}
		}
		if u.Relationships.Mappings != nil {
			if u.Relationships.Mappings.Links != nil {
				q.Set("relationships.mappings.links.self", u.Relationships.Mappings.Links.Self)
				q.Set("relationships.mappings.links.related", u.Relationships.Mappings.Links.Related)
				q.Set("relationships.mappings.links.next", u.Relationships.Mappings.Links.Next)
				q.Set("relationships.mappings.links.last", u.Relationships.Mappings.Links.Last)
			}
		}
		if u.Relationships.Reviews != nil {
			if u.Relationships.Reviews.Links != nil {
				q.Set("relationships.reviews.links.self", u.Relationships.Reviews.Links.Self)
				q.Set("relationships.reviews.links.related", u.Relationships.Reviews.Links.Related)
				q.Set("relationships.reviews.links.next", u.Relationships.Reviews.Links.Next)
				q.Set("relationships.reviews.links.last", u.Relationships.Reviews.Links.Last)
			}
		}
		if u.Relationships.MediaRelationships != nil {
			if u.Relationships.MediaRelationships.Links != nil {
				q.Set("relationships.mediaRelationships.links.self", u.Relationships.MediaRelationships.Links.Self)
				q.Set("relationships.mediaRelationships.links.related", u.Relationships.MediaRelationships.Links.Related)
				q.Set("relationships.mediaRelationships.links.next", u.Relationships.MediaRelationships.Links.Next)
				q.Set("relationships.mediaRelationships.links.last", u.Relationships.MediaRelationships.Links.Last)
			}
		}
		if u.Relationships.Characters != nil {
			if u.Relationships.Characters.Links != nil {
				q.Set("relationships.characters.links.self", u.Relationships.Characters.Links.Self)
				q.Set("relationships.characters.links.related", u.Relationships.Characters.Links.Related)
				q.Set("relationships.characters.links.next", u.Relationships.Characters.Links.Next)
				q.Set("relationships.characters.links.last", u.Relationships.Characters.Links.Last)
			}
		}
		if u.Relationships.Staff != nil {
			if u.Relationships.Staff.Links != nil {
				q.Set("relationships.staff.links.self", u.Relationships.Staff.Links.Self)
				q.Set("relationships.staff.links.related", u.Relationships.Staff.Links.Related)
				q.Set("relationships.staff.links.next", u.Relationships.Staff.Links.Next)
				q.Set("relationships.staff.links.last", u.Relationships.Staff.Links.Last)
			}
		}
		if u.Relationships.Productions != nil {
			if u.Relationships.Productions.Links != nil {
				q.Set("relationships.productions.links.self", u.Relationships.Productions.Links.Self)
				q.Set("relationships.productions.links.related", u.Relationships.Productions.Links.Related)
				q.Set("relationships.productions.links.next", u.Relationships.Productions.Links.Next)
				q.Set("relationships.productions.links.last", u.Relationships.Productions.Links.Last)
			}
		}
		if u.Relationships.Quotes != nil {
			if u.Relationships.Quotes.Links != nil {
				q.Set("relationships.quotes.links.self", u.Relationships.Quotes.Links.Self)
				q.Set("relationships.quotes.links.related", u.Relationships.Quotes.Links.Related)
				q.Set("relationships.quotes.links.next", u.Relationships.Quotes.Links.Next)
				q.Set("relationships.quotes.links.last", u.Relationships.Quotes.Links.Last)
			}
		}
		if u.Relationships.Episodes != nil {
			if u.Relationships.Episodes.Links != nil {
				q.Set("relationships.episodes.links.self", u.Relationships.Episodes.Links.Self)
				q.Set("relationships.episodes.links.related", u.Relationships.Episodes.Links.Related)
				q.Set("relationships.episodes.links.next", u.Relationships.Episodes.Links.Next)
				q.Set("relationships.episodes.links.last", u.Relationships.Episodes.Links.Last)
			}
		}
		if u.Relationships.StreamingLinks != nil {
			if u.Relationships.StreamingLinks.Links != nil {
				q.Set("relationships.streamingLinks.links.self", u.Relationships.StreamingLinks.Links.Self)
				q.Set("relationships.streamingLinks.links.related", u.Relationships.StreamingLinks.Links.Related)
				q.Set("relationships.streamingLinks.links.next", u.Relationships.StreamingLinks.Links.Next)
				q.Set("relationships.streamingLinks.links.last", u.Relationships.StreamingLinks.Links.Last)
			}
		}
		if u.Relationships.AnimeProductions != nil {
			if u.Relationships.AnimeProductions.Links != nil {
				q.Set("relationships.animeProductions.links.self", u.Relationships.AnimeProductions.Links.Self)
				q.Set("relationships.animeProductions.links.related", u.Relationships.AnimeProductions.Links.Related)
				q.Set("relationships.animeProductions.links.next", u.Relationships.AnimeProductions.Links.Next)
				q.Set("relationships.animeProductions.links.last", u.Relationships.AnimeProductions.Links.Last)
			}
		}
		if u.Relationships.AnimeCharacters != nil {
			if u.Relationships.AnimeCharacters.Links != nil {
				q.Set("relationships.animeCharacters.links.self", u.Relationships.AnimeCharacters.Links.Self)
				q.Set("relationships.animeCharacters.links.related", u.Relationships.AnimeCharacters.Links.Related)
				q.Set("relationships.animeCharacters.links.next", u.Relationships.AnimeCharacters.Links.Next)
				q.Set("relationships.animeCharacters.links.last", u.Relationships.AnimeCharacters.Links.Last)
			}
		}
		if u.Relationships.AnimeStaff != nil {
			if u.Relationships.AnimeStaff.Links != nil {
				q.Set("relationships.animeStaff.links.self", u.Relationships.AnimeStaff.Links.Self)
				q.Set("relationships.animeStaff.links.related", u.Relationships.AnimeStaff.Links.Related)
				q.Set("relationships.animeStaff.links.next", u.Relationships.AnimeStaff.Links.Next)
				q.Set("relationships.animeStaff.links.last", u.Relationships.AnimeStaff.Links.Last)
			}
		}
	}
	return q
}

// QueryString returns http url.Values of KitsuAnimeListRequest
func (u *KitsuAnimeListRequest) QueryString() url.Values {
	var q = url.Values{}
	if u.Page != nil {
		for k, v := range u.Page {
			q.Set("page["+k+"]", v)
		}
	}
	return q
}

// QueryString returns http url.Values of KitsuAnimeListResponse
func (u *KitsuAnimeListResponse) QueryString() url.Values {
	var q = url.Values{}
	q.Set("contentSource", u.ContentSource.String())
	return q
}

// QueryString returns http url.Values of KitsuAnimeRequest
func (u *KitsuAnimeRequest) QueryString() url.Values {
	var q = url.Values{}
	q.Set("id", u.Id)
	return q
}

// QueryString returns http url.Values of KitsuAnimeResponse
func (u *KitsuAnimeResponse) QueryString() url.Values {
	var q = url.Values{}
	q.Set("contentSource", u.ContentSource.String())
	if u.Data != nil {
		q.Set("data.id", u.Data.Id)
		q.Set("data.type", u.Data.Type)
		if u.Data.Links != nil {
			q.Set("data.links.self", u.Data.Links.Self)
			q.Set("data.links.related", u.Data.Links.Related)
			q.Set("data.links.next", u.Data.Links.Next)
			q.Set("data.links.last", u.Data.Links.Last)
		}
		if u.Data.Attributes != nil {
			q.Set("data.attributes.createdAt", u.Data.Attributes.CreatedAt)
			q.Set("data.attributes.updatedAt", u.Data.Attributes.UpdatedAt)
			q.Set("data.attributes.slug", u.Data.Attributes.Slug)
			q.Set("data.attributes.synopsis", u.Data.Attributes.Synopsis)
			q.Set("data.attributes.description", u.Data.Attributes.Description)
			q.Set("data.attributes.coverImageTopOffset", strconv.FormatInt(int64(u.Data.Attributes.CoverImageTopOffset), 10))
			if u.Data.Attributes.Titles != nil {
				for k, v := range u.Data.Attributes.Titles {
					q.Set("data.attributes.titles["+k+"]", v)
				}
			}
			q.Set("data.attributes.canonicalTitle", u.Data.Attributes.CanonicalTitle)
			q.Set("data.attributes.averageRating", u.Data.Attributes.AverageRating)
			if u.Data.Attributes.RatingFrequencies != nil {
				for k, v := range u.Data.Attributes.RatingFrequencies {
					q.Set("data.attributes.ratingFrequencies["+k+"]", v)
				}
			}
			q.Set("data.attributes.userCount", strconv.FormatInt(u.Data.Attributes.UserCount, 10))
			q.Set("data.attributes.favoritesCount", strconv.FormatInt(u.Data.Attributes.FavoritesCount, 10))
			q.Set("data.attributes.startDate", u.Data.Attributes.StartDate)
			q.Set("data.attributes.endDate", u.Data.Attributes.EndDate)
			q.Set("data.attributes.nextRelease", u.Data.Attributes.NextRelease)
			q.Set("data.attributes.popularityRank", strconv.FormatInt(int64(u.Data.Attributes.PopularityRank), 10))
			q.Set("data.attributes.ratingRank", strconv.FormatInt(int64(u.Data.Attributes.RatingRank), 10))
			q.Set("data.attributes.ageRating", u.Data.Attributes.AgeRating)
			q.Set("data.attributes.ageRatingGuide", u.Data.Attributes.AgeRatingGuide)
			q.Set("data.attributes.subtype", u.Data.Attributes.Subtype)
			q.Set("data.attributes.status", u.Data.Attributes.Status)
			q.Set("data.attributes.tba", u.Data.Attributes.Tba)
			if u.Data.Attributes.PosterImage != nil {
				q.Set("data.attributes.posterImage.tiny", u.Data.Attributes.PosterImage.Tiny)
				q.Set("data.attributes.posterImage.small", u.Data.Attributes.PosterImage.Small)
				q.Set("data.attributes.posterImage.medium", u.Data.Attributes.PosterImage.Medium)
				q.Set("data.attributes.posterImage.large", u.Data.Attributes.PosterImage.Large)
				q.Set("data.attributes.posterImage.original", u.Data.Attributes.PosterImage.Original)
				if u.Data.Attributes.PosterImage.Meta != nil {
					if u.Data.Attributes.PosterImage.Meta.Dimensions != nil {
						for k, v := range u.Data.Attributes.PosterImage.Meta.Dimensions {
							q.Set("data.attributes.posterImage.meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
							q.Set("data.attributes.posterImage.meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
						}
					}
				}
			}
			if u.Data.Attributes.CoverImage != nil {
				q.Set("data.attributes.coverImage.tiny", u.Data.Attributes.CoverImage.Tiny)
				q.Set("data.attributes.coverImage.small", u.Data.Attributes.CoverImage.Small)
				q.Set("data.attributes.coverImage.medium", u.Data.Attributes.CoverImage.Medium)
				q.Set("data.attributes.coverImage.large", u.Data.Attributes.CoverImage.Large)
				q.Set("data.attributes.coverImage.original", u.Data.Attributes.CoverImage.Original)
				if u.Data.Attributes.CoverImage.Meta != nil {
					if u.Data.Attributes.CoverImage.Meta.Dimensions != nil {
						for k, v := range u.Data.Attributes.CoverImage.Meta.Dimensions {
							q.Set("data.attributes.coverImage.meta.dimensions["+k+"][width]", strconv.FormatInt(int64(v.Width), 10))   // int32
							q.Set("data.attributes.coverImage.meta.dimensions["+k+"][height]", strconv.FormatInt(int64(v.Height), 10)) // int32
						}
					}
				}
			}
			q.Set("data.attributes.episodeCount", strconv.FormatInt(int64(u.Data.Attributes.EpisodeCount), 10))
			q.Set("data.attributes.episodeLength", strconv.FormatInt(int64(u.Data.Attributes.EpisodeLength), 10))
			q.Set("data.attributes.totalLength", strconv.FormatInt(int64(u.Data.Attributes.TotalLength), 10))
			q.Set("data.attributes.youtubeVideoId", u.Data.Attributes.YoutubeVideoId)
			q.Set("data.attributes.showType", u.Data.Attributes.ShowType)
			tm0 := "false"
			if u.Data.Attributes.Nsfw {
				tm0 = "true"
			}
			q.Set("data.attributes.nsfw", tm0)
		}
		if u.Data.Relationships != nil {
			if u.Data.Relationships.Genres != nil {
				if u.Data.Relationships.Genres.Links != nil {
					q.Set("data.relationships.genres.links.self", u.Data.Relationships.Genres.Links.Self)
					q.Set("data.relationships.genres.links.related", u.Data.Relationships.Genres.Links.Related)
					q.Set("data.relationships.genres.links.next", u.Data.Relationships.Genres.Links.Next)
					q.Set("data.relationships.genres.links.last", u.Data.Relationships.Genres.Links.Last)
				}
			}
			if u.Data.Relationships.Categories != nil {
				if u.Data.Relationships.Categories.Links != nil {
					q.Set("data.relationships.categories.links.self", u.Data.Relationships.Categories.Links.Self)
					q.Set("data.relationships.categories.links.related", u.Data.Relationships.Categories.Links.Related)
					q.Set("data.relationships.categories.links.next", u.Data.Relationships.Categories.Links.Next)
					q.Set("data.relationships.categories.links.last", u.Data.Relationships.Categories.Links.Last)
				}
			}
			if u.Data.Relationships.Castings != nil {
				if u.Data.Relationships.Castings.Links != nil {
					q.Set("data.relationships.castings.links.self", u.Data.Relationships.Castings.Links.Self)
					q.Set("data.relationships.castings.links.related", u.Data.Relationships.Castings.Links.Related)
					q.Set("data.relationships.castings.links.next", u.Data.Relationships.Castings.Links.Next)
					q.Set("data.relationships.castings.links.last", u.Data.Relationships.Castings.Links.Last)
				}
			}
			if u.Data.Relationships.Installments != nil {
				if u.Data.Relationships.Installments.Links != nil {
					q.Set("data.relationships.installments.links.self", u.Data.Relationships.Installments.Links.Self)
					q.Set("data.relationships.installments.links.related", u.Data.Relationships.Installments.Links.Related)
					q.Set("data.relationships.installments.links.next", u.Data.Relationships.Installments.Links.Next)
					q.Set("data.relationships.installments.links.last", u.Data.Relationships.Installments.Links.Last)
				}
			}
			if u.Data.Relationships.Mappings != nil {
				if u.Data.Relationships.Mappings.Links != nil {
					q.Set("data.relationships.mappings.links.self", u.Data.Relationships.Mappings.Links.Self)
					q.Set("data.relationships.mappings.links.related", u.Data.Relationships.Mappings.Links.Related)
					q.Set("data.relationships.mappings.links.next", u.Data.Relationships.Mappings.Links.Next)
					q.Set("data.relationships.mappings.links.last", u.Data.Relationships.Mappings.Links.Last)
				}
			}
			if u.Data.Relationships.Reviews != nil {
				if u.Data.Relationships.Reviews.Links != nil {
					q.Set("data.relationships.reviews.links.self", u.Data.Relationships.Reviews.Links.Self)
					q.Set("data.relationships.reviews.links.related", u.Data.Relationships.Reviews.Links.Related)
					q.Set("data.relationships.reviews.links.next", u.Data.Relationships.Reviews.Links.Next)
					q.Set("data.relationships.reviews.links.last", u.Data.Relationships.Reviews.Links.Last)
				}
			}
			if u.Data.Relationships.MediaRelationships != nil {
				if u.Data.Relationships.MediaRelationships.Links != nil {
					q.Set("data.relationships.mediaRelationships.links.self", u.Data.Relationships.MediaRelationships.Links.Self)
					q.Set("data.relationships.mediaRelationships.links.related", u.Data.Relationships.MediaRelationships.Links.Related)
					q.Set("data.relationships.mediaRelationships.links.next", u.Data.Relationships.MediaRelationships.Links.Next)
					q.Set("data.relationships.mediaRelationships.links.last", u.Data.Relationships.MediaRelationships.Links.Last)
				}
			}
			if u.Data.Relationships.Characters != nil {
				if u.Data.Relationships.Characters.Links != nil {
					q.Set("data.relationships.characters.links.self", u.Data.Relationships.Characters.Links.Self)
					q.Set("data.relationships.characters.links.related", u.Data.Relationships.Characters.Links.Related)
					q.Set("data.relationships.characters.links.next", u.Data.Relationships.Characters.Links.Next)
					q.Set("data.relationships.characters.links.last", u.Data.Relationships.Characters.Links.Last)
				}
			}
			if u.Data.Relationships.Staff != nil {
				if u.Data.Relationships.Staff.Links != nil {
					q.Set("data.relationships.staff.links.self", u.Data.Relationships.Staff.Links.Self)
					q.Set("data.relationships.staff.links.related", u.Data.Relationships.Staff.Links.Related)
					q.Set("data.relationships.staff.links.next", u.Data.Relationships.Staff.Links.Next)
					q.Set("data.relationships.staff.links.last", u.Data.Relationships.Staff.Links.Last)
				}
			}
			if u.Data.Relationships.Productions != nil {
				if u.Data.Relationships.Productions.Links != nil {
					q.Set("data.relationships.productions.links.self", u.Data.Relationships.Productions.Links.Self)
					q.Set("data.relationships.productions.links.related", u.Data.Relationships.Productions.Links.Related)
					q.Set("data.relationships.productions.links.next", u.Data.Relationships.Productions.Links.Next)
					q.Set("data.relationships.productions.links.last", u.Data.Relationships.Productions.Links.Last)
				}
			}
			if u.Data.Relationships.Quotes != nil {
				if u.Data.Relationships.Quotes.Links != nil {
					q.Set("data.relationships.quotes.links.self", u.Data.Relationships.Quotes.Links.Self)
					q.Set("data.relationships.quotes.links.related", u.Data.Relationships.Quotes.Links.Related)
					q.Set("data.relationships.quotes.links.next", u.Data.Relationships.Quotes.Links.Next)
					q.Set("data.relationships.quotes.links.last", u.Data.Relationships.Quotes.Links.Last)
				}
			}
			if u.Data.Relationships.Episodes != nil {
				if u.Data.Relationships.Episodes.Links != nil {
					q.Set("data.relationships.episodes.links.self", u.Data.Relationships.Episodes.Links.Self)
					q.Set("data.relationships.episodes.links.related", u.Data.Relationships.Episodes.Links.Related)
					q.Set("data.relationships.episodes.links.next", u.Data.Relationships.Episodes.Links.Next)
					q.Set("data.relationships.episodes.links.last", u.Data.Relationships.Episodes.Links.Last)
				}
			}
			if u.Data.Relationships.StreamingLinks != nil {
				if u.Data.Relationships.StreamingLinks.Links != nil {
					q.Set("data.relationships.streamingLinks.links.self", u.Data.Relationships.StreamingLinks.Links.Self)
					q.Set("data.relationships.streamingLinks.links.related", u.Data.Relationships.StreamingLinks.Links.Related)
					q.Set("data.relationships.streamingLinks.links.next", u.Data.Relationships.StreamingLinks.Links.Next)
					q.Set("data.relationships.streamingLinks.links.last", u.Data.Relationships.StreamingLinks.Links.Last)
				}
			}
			if u.Data.Relationships.AnimeProductions != nil {
				if u.Data.Relationships.AnimeProductions.Links != nil {
					q.Set("data.relationships.animeProductions.links.self", u.Data.Relationships.AnimeProductions.Links.Self)
					q.Set("data.relationships.animeProductions.links.related", u.Data.Relationships.AnimeProductions.Links.Related)
					q.Set("data.relationships.animeProductions.links.next", u.Data.Relationships.AnimeProductions.Links.Next)
					q.Set("data.relationships.animeProductions.links.last", u.Data.Relationships.AnimeProductions.Links.Last)
				}
			}
			if u.Data.Relationships.AnimeCharacters != nil {
				if u.Data.Relationships.AnimeCharacters.Links != nil {
					q.Set("data.relationships.animeCharacters.links.self", u.Data.Relationships.AnimeCharacters.Links.Self)
					q.Set("data.relationships.animeCharacters.links.related", u.Data.Relationships.AnimeCharacters.Links.Related)
					q.Set("data.relationships.animeCharacters.links.next", u.Data.Relationships.AnimeCharacters.Links.Next)
					q.Set("data.relationships.animeCharacters.links.last", u.Data.Relationships.AnimeCharacters.Links.Last)
				}
			}
			if u.Data.Relationships.AnimeStaff != nil {
				if u.Data.Relationships.AnimeStaff.Links != nil {
					q.Set("data.relationships.animeStaff.links.self", u.Data.Relationships.AnimeStaff.Links.Self)
					q.Set("data.relationships.animeStaff.links.related", u.Data.Relationships.AnimeStaff.Links.Related)
					q.Set("data.relationships.animeStaff.links.next", u.Data.Relationships.AnimeStaff.Links.Next)
					q.Set("data.relationships.animeStaff.links.last", u.Data.Relationships.AnimeStaff.Links.Last)
				}
			}
		}
	}
	return q
}
